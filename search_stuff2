Add-Type -AssemblyName System.Windows.Forms

# Display a folder browser dialog to select the root path
$folderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog
$folderBrowser.Description = "Select the root directory to search"
$folderBrowser.ShowNewFolderButton = $false

# Show the folder browser dialog and capture the selected path
$dialogResult = $folderBrowser.ShowDialog()

if ($dialogResult -eq [System.Windows.Forms.DialogResult]::OK) {
    $rootPath = $folderBrowser.SelectedPath

    # Define keywords to search for (e.g., passwords, credentials, API keys)
    $keywords = "password", "credential", "apikey", "token", "secret"

    # Specify the output file path for saving the results
    $outputFilePath = "C:\path\to\results.txt"

    # Clear existing content in the output file
    Clear-Content -Path $outputFilePath

    # Recursively search through all files in the specified directory
    Get-ChildItem -Path $rootPath -Recurse -File | ForEach-Object {
        $filePath = $_.FullName

        # Output current directory being searched
        Write-Host "Searching in: $filePath"

        # Check file extension to skip unsupported file types
        $supportedExtensions = ".pdf", ".docx", ".xlsx", ".pptx", ".txt", ".csv", ".json", ".xml", ".html", ".xlsx", ".doc", ".ini", ".yaml", ".toml", ".properties", ".md"
        if ($supportedExtensions -notcontains $_.Extension) {
            Write-Host "Skipping unsupported file: $filePath"
            return
        }

        # Read file content and search for lines containing any of the keywords
        $fileContent = Get-Content -Path $filePath -ErrorAction SilentlyContinue
        foreach ($keyword in $keywords) {
            $matchingLines = $fileContent | Select-String -Pattern $keyword -SimpleMatch
            foreach ($line in $matchingLines) {
                # Get last modified date of the file
                $lastModified = $_.LastWriteTime

                # Append file path, last modified date, and matched line to the output file
                $result = "Found '$keyword' in file: $filePath (Last Modified: $lastModified)`n$($line.Line)"
                Write-Host $result

                # Append result to the output file
                Add-Content -Path $outputFilePath -Value $result
            }
        }
    }
}
